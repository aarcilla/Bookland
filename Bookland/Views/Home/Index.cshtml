@using Bookland.Helpers;
@model Bookland.Models.ProductsViewModel

@{
    // Add heading to title
    if (!String.IsNullOrEmpty(Model.Heading)) {
        ViewBag.Title = Model.Heading;
    } else {
        ViewBag.Title = "Home";
    }
}

@{
    int currColumn = 0;
    decimal columnWidth = Math.Round(100M / (decimal)Model.NumColumns, 4);
}

<style>
    .item {
        width: @columnWidth%;
    }
</style>

<span style="float: right">
    Order by: 
    @using(Html.BeginForm("Order", "Home", FormMethod.Get)) {
        @Html.DropDownList("Order", Model.OrderOptions, new { onchange = "submit()" })
        @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
        <noscript><input type="submit" value="Go" /></noscript>
    }
</span>

@if (Model.Heading != null) {
    <h2>@Model.Heading</h2>
}

@if (Model.Products != null && Model.Products.Count() > 0) {
    <div id="items">
        <div class="row">
        @foreach (var item in Model.Products) {
            if (currColumn % Model.NumColumns == 0 && currColumn > 0) {
                @:</div><div class="row">
            }
            <span class="item">
                @{ Html.RenderPartial("_ViewProduct", item); }
            </span>
    
            currColumn++;
        }
        </div>
    </div>
} else {
    <p>There are no products available.</p>
}